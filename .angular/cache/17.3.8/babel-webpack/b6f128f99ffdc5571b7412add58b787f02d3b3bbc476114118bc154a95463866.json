{"ast":null,"code":"import Block from '../blots/block.js';\nimport Container from '../blots/container.js';\nimport Quill from '../core/quill.js';\nlet ListContainer = /*#__PURE__*/(() => {\n  class ListContainer extends Container {}\n  ListContainer.blotName = 'list-container';\n  ListContainer.tagName = 'OL';\n  return ListContainer;\n})();\nlet ListItem = /*#__PURE__*/(() => {\n  class ListItem extends Block {\n    static create(value) {\n      const node = super.create();\n      node.setAttribute('data-list', value);\n      return node;\n    }\n    static formats(domNode) {\n      return domNode.getAttribute('data-list') || undefined;\n    }\n    static register() {\n      Quill.register(ListContainer);\n    }\n    constructor(scroll, domNode) {\n      super(scroll, domNode);\n      const ui = domNode.ownerDocument.createElement('span');\n      const listEventHandler = e => {\n        if (!scroll.isEnabled()) return;\n        const format = this.statics.formats(domNode, scroll);\n        if (format === 'checked') {\n          this.format('list', 'unchecked');\n          e.preventDefault();\n        } else if (format === 'unchecked') {\n          this.format('list', 'checked');\n          e.preventDefault();\n        }\n      };\n      ui.addEventListener('mousedown', listEventHandler);\n      ui.addEventListener('touchstart', listEventHandler);\n      this.attachUI(ui);\n    }\n    format(name, value) {\n      if (name === this.statics.blotName && value) {\n        this.domNode.setAttribute('data-list', value);\n      } else {\n        super.format(name, value);\n      }\n    }\n  }\n  ListItem.blotName = 'list';\n  ListItem.tagName = 'LI';\n  return ListItem;\n})();\nListContainer.allowedChildren = [ListItem];\nListItem.requiredContainer = ListContainer;\nexport { ListContainer, ListItem as default };\n//# sourceMappingURL=list.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}