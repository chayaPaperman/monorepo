{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, inject, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport { PrimeNGConfig, TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { TimesCircleIcon } from 'primeng/icons/timescircle';\n\n/**\n * Chip represents people using icons, labels and images.\n * @group Components\n */\nconst _c0 = [\"*\"];\nfunction Chip_div_0_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 6);\n    i0.ɵɵlistener(\"error\", function Chip_div_0_img_2_Template_img_error_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.imageError($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.image, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r1.alt);\n  }\n}\nfunction Chip_div_0_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r1.icon);\n    i0.ɵɵproperty(\"ngClass\", \"p-chip-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Chip_div_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Chip_div_0_ng_template_3_span_0_Template, 1, 4, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.icon);\n  }\n}\nfunction Chip_div_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.label);\n  }\n}\nfunction Chip_div_0_ng_container_6_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function Chip_div_0_ng_container_6_ng_container_1_span_1_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.close($event));\n    })(\"keydown\", function Chip_div_0_ng_container_6_ng_container_1_span_1_Template_span_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.onKeydown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r1.removeIcon);\n    i0.ɵɵproperty(\"ngClass\", \"pi-chip-remove-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"removeicon\")(\"aria-label\", ctx_r1.removeAriaLabel);\n  }\n}\nfunction Chip_div_0_ng_container_6_ng_container_1_TimesCircleIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesCircleIcon\", 14);\n    i0.ɵɵlistener(\"click\", function Chip_div_0_ng_container_6_ng_container_1_TimesCircleIcon_2_Template_TimesCircleIcon_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.close($event));\n    })(\"keydown\", function Chip_div_0_ng_container_6_ng_container_1_TimesCircleIcon_2_Template_TimesCircleIcon_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.onKeydown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(\"pi-chip-remove-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"removeicon\")(\"aria-label\", ctx_r1.removeAriaLabel);\n  }\n}\nfunction Chip_div_0_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Chip_div_0_ng_container_6_ng_container_1_span_1_Template, 1, 5, \"span\", 11)(2, Chip_div_0_ng_container_6_ng_container_1_TimesCircleIcon_2_Template, 1, 4, \"TimesCircleIcon\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.removeIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.removeIcon);\n  }\n}\nfunction Chip_div_0_ng_container_6_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Chip_div_0_ng_container_6_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Chip_div_0_ng_container_6_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Chip_div_0_ng_container_6_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵlistener(\"click\", function Chip_div_0_ng_container_6_span_2_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.close($event));\n    })(\"keydown\", function Chip_div_0_ng_container_6_span_2_Template_span_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onKeydown($event));\n    });\n    i0.ɵɵtemplate(1, Chip_div_0_ng_container_6_span_2_1_Template, 1, 0, null, 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"data-pc-section\", \"removeicon\")(\"aria-label\", ctx_r1.removeAriaLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.removeIconTemplate);\n  }\n}\nfunction Chip_div_0_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Chip_div_0_ng_container_6_ng_container_1_Template, 3, 2, \"ng-container\", 5)(2, Chip_div_0_ng_container_6_span_2_Template, 2, 3, \"span\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.removeIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.removeIconTemplate);\n  }\n}\nfunction Chip_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, Chip_div_0_img_2_Template, 1, 2, \"img\", 3)(3, Chip_div_0_ng_template_3_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(5, Chip_div_0_div_5_Template, 2, 2, \"div\", 4)(6, Chip_div_0_ng_container_6_Template, 3, 2, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const iconTemplate_r6 = i0.ɵɵreference(4);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.styleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.containerClass())(\"ngStyle\", ctx_r1.style);\n    i0.ɵɵattribute(\"data-pc-name\", \"chip\")(\"aria-label\", ctx_r1.label)(\"data-pc-section\", \"root\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.image)(\"ngIfElse\", iconTemplate_r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.label);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.removable);\n  }\n}\nlet Chip = /*#__PURE__*/(() => {\n  class Chip {\n    /**\n     * Defines the text to display.\n     * @group Props\n     */\n    label;\n    /**\n     * Defines the icon to display.\n     * @group Props\n     */\n    icon;\n    /**\n     * Defines the image to display.\n     * @group Props\n     */\n    image;\n    /**\n     * Alt attribute of the image.\n     * @group Props\n     */\n    alt;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Whether to display a remove icon.\n     * @group Props\n     */\n    removable = false;\n    /**\n     * Icon of the remove element.\n     * @group Props\n     */\n    removeIcon;\n    /**\n     * Callback to invoke when a chip is removed.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onRemove = new EventEmitter();\n    /**\n     * This event is triggered if an error occurs while loading an image file.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onImageError = new EventEmitter();\n    config = inject(PrimeNGConfig);\n    visible = true;\n    removeIconTemplate;\n    get removeAriaLabel() {\n      return this.config.getTranslation(TranslationKeys.ARIA)['removeLabel'];\n    }\n    templates;\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'removeicon':\n            this.removeIconTemplate = item.template;\n            break;\n          default:\n            this.removeIconTemplate = item.template;\n            break;\n        }\n      });\n    }\n    containerClass() {\n      return {\n        'p-chip p-component': true,\n        'p-chip-image': this.image != null\n      };\n    }\n    close(event) {\n      this.visible = false;\n      this.onRemove.emit(event);\n    }\n    onKeydown(event) {\n      if (event.key === 'Enter' || event.key === 'Backspace') {\n        this.close(event);\n      }\n    }\n    imageError(event) {\n      this.onImageError.emit(event);\n    }\n    static ɵfac = function Chip_Factory(t) {\n      return new (t || Chip)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Chip,\n      selectors: [[\"p-chip\"]],\n      contentQueries: function Chip_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        label: \"label\",\n        icon: \"icon\",\n        image: \"image\",\n        alt: \"alt\",\n        style: \"style\",\n        styleClass: \"styleClass\",\n        removable: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"removable\", \"removable\", booleanAttribute],\n        removeIcon: \"removeIcon\"\n      },\n      outputs: {\n        onRemove: \"onRemove\",\n        onImageError: \"onImageError\"\n      },\n      features: [i0.ɵɵInputTransformsFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 1,\n      consts: [[\"iconTemplate\", \"\"], [3, \"ngClass\", \"class\", \"ngStyle\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"src\", \"alt\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"class\", \"p-chip-text\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"error\", \"src\", \"alt\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"p-chip-text\"], [\"tabindex\", \"0\", \"class\", \"pi-chip-remove-icon\", \"role\", \"button\", 3, \"click\", \"keydown\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"role\", \"button\", 3, \"class\", \"ngClass\", \"click\", \"keydown\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"role\", \"button\", 3, \"class\", \"click\", \"keydown\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"role\", \"button\", 3, \"click\", \"keydown\", \"ngClass\"], [\"tabindex\", \"0\", \"role\", \"button\", 3, \"click\", \"keydown\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"pi-chip-remove-icon\", 3, \"click\", \"keydown\"], [4, \"ngTemplateOutlet\"]],\n      template: function Chip_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, Chip_div_0_Template, 7, 11, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.visible);\n        }\n      },\n      dependencies: () => [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, TimesCircleIcon],\n      styles: [\"@layer primeng{.p-chip{display:inline-flex;align-items:center}.p-chip-text,.p-chip-icon.pi,.pi-chip-remove-icon.pi{line-height:1.5}.pi-chip-remove-icon{cursor:pointer}.p-chip img{border-radius:50%}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return Chip;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ChipModule = /*#__PURE__*/(() => {\n  class ChipModule {\n    static ɵfac = function ChipModule_Factory(t) {\n      return new (t || ChipModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ChipModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, TimesCircleIcon, SharedModule, SharedModule]\n    });\n  }\n  return ChipModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Chip, ChipModule };\n//# sourceMappingURL=primeng-chip.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}