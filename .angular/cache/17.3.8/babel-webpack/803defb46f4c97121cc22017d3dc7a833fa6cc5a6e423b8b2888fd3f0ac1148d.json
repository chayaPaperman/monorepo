{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/storage.service\";\nimport * as i2 from \"../_services/user.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction RestartPasswordComponent_Conditional_10_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RestartPasswordComponent_Conditional_10_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RestartPasswordComponent_Conditional_10_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must contain at least one uppercase letter and one lowercase letter\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RestartPasswordComponent_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, RestartPasswordComponent_Conditional_10_Conditional_1_Template, 2, 0, \"div\")(2, RestartPasswordComponent_Conditional_10_Conditional_2_Template, 2, 0, \"div\")(3, RestartPasswordComponent_Conditional_10_Conditional_3_Template, 2, 0, \"div\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const password_r3 = i0.ɵɵreference(9);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(1, password_r3.errors[\"required\"] ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(2, password_r3.errors[\"minlength\"] ? 2 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(3, password_r3.errors[\"pattern\"] ? 3 : -1);\n  }\n}\nfunction RestartPasswordComponent_Conditional_16_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"passwordAuthentication is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RestartPasswordComponent_Conditional_16_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RestartPasswordComponent_Conditional_16_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must contain at least one uppercase letter and one lowercase letter\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RestartPasswordComponent_Conditional_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, RestartPasswordComponent_Conditional_16_Conditional_1_Template, 2, 0, \"div\")(2, RestartPasswordComponent_Conditional_16_Conditional_2_Template, 2, 0, \"div\")(3, RestartPasswordComponent_Conditional_16_Conditional_3_Template, 2, 0, \"div\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const passwordAuthentication_r4 = i0.ɵɵreference(15);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(1, passwordAuthentication_r4.errors[\"required\"] ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(2, passwordAuthentication_r4.errors[\"minlength\"] ? 2 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(3, passwordAuthentication_r4.errors[\"pattern\"] ? 3 : -1);\n  }\n}\nfunction RestartPasswordComponent_Conditional_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\");\n    i0.ɵɵtext(2, \"Passwords do not match\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RestartPasswordComponent_Conditional_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Login failed: \", ctx_r4.errorMessage, \" \");\n  }\n}\nexport let RestartPasswordComponent = /*#__PURE__*/(() => {\n  class RestartPasswordComponent {\n    constructor(storageService, userService, router) {\n      this.storageService = storageService;\n      this.userService = userService;\n      this.router = router;\n      this.form = {\n        password: null,\n        passwordAuthentication: null\n      };\n      this.isLoggedIn = false;\n      this.isLoginFailed = false;\n      this.errorMessage = '';\n      this.roles = [];\n    }\n    ngOnInit() {\n      if (this.storageService.isLoggedIn()) {\n        this.isLoggedIn = true;\n        this.roles = this.storageService.getUser().roles;\n      }\n    }\n    onSubmit() {\n      if (this.form.password !== this.form.passwordAuthentication) {\n        this.isLoginFailed = true;\n        this.errorMessage = \"Passwords do not match\";\n      } else {\n        this.userService.changPassword(this.form.password).subscribe(newToken => {\n          if (newToken && newToken.token) {\n            this.storageService.saveUser(newToken.token);\n            this.isLoginFailed = false;\n            this.isLoggedIn = true;\n            this.roles = this.storageService.getUser().roles;\n            this.router.navigate(['/home']);\n          }\n        }, error => {\n          alert('Failed to change password');\n        });\n      }\n    }\n    reloadPage() {\n      window.location.reload();\n    }\n    static #_ = this.ɵfac = function RestartPasswordComponent_Factory(t) {\n      return new (t || RestartPasswordComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RestartPasswordComponent,\n      selectors: [[\"app-restart-password\"]],\n      decls: 24,\n      vars: 12,\n      consts: [[\"f\", \"ngForm\"], [\"password\", \"ngModel\"], [\"passwordAuthentication\", \"ngModel\"], [1, \"col-md-12\"], [1, \"card\", \"card-container\"], [\"id\", \"profile-img\", \"src\", \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\", 1, \"profile-img-card\"], [\"name\", \"form\", \"novalidate\", \"\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", \"pattern\", \"^(?=.*[a-z])(?=.*[A-Z]).+$\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\", \"ngClass\"], [1, \"invalid-feedback\"], [\"for\", \"passwordAuthentication\"], [\"type\", \"password\", \"name\", \"passwordAuthentication\", \"required\", \"\", \"minlength\", \"6\", \"pattern\", \"^(?=.*[a-z])(?=.*[A-Z]).+$\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\", \"ngClass\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [1, \"btn\", \"btn-primary\", \"btn-block\"]],\n      template: function RestartPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n          i0.ɵɵelement(2, \"img\", 5);\n          i0.ɵɵelementStart(3, \"form\", 6, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function RestartPasswordComponent_Template_form_ngSubmit_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const f_r2 = i0.ɵɵreference(4);\n            return i0.ɵɵresetView(f_r2.form.valid && ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(5, \"div\", 7)(6, \"label\", 8);\n          i0.ɵɵtext(7, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 9, 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RestartPasswordComponent_Template_input_ngModelChange_8_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.form.password, $event) || (ctx.form.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, RestartPasswordComponent_Conditional_10_Template, 4, 3, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 11);\n          i0.ɵɵtext(13, \"Password Authentication\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 12, 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RestartPasswordComponent_Template_input_ngModelChange_14_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.form.passwordAuthentication, $event) || (ctx.form.passwordAuthentication = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(16, RestartPasswordComponent_Conditional_16_Template, 4, 3, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 7);\n          i0.ɵɵtemplate(18, RestartPasswordComponent_Conditional_18_Template, 3, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 7);\n          i0.ɵɵtemplate(20, RestartPasswordComponent_Conditional_20_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\", 7)(22, \"button\", 14);\n          i0.ɵɵtext(23, \"Change password\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          const f_r2 = i0.ɵɵreference(4);\n          const password_r3 = i0.ɵɵreference(9);\n          const passwordAuthentication_r4 = i0.ɵɵreference(15);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.form.password);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, f_r2.submitted && password_r3.errors));\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(10, password_r3.errors && f_r2.submitted ? 10 : -1);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.form.passwordAuthentication);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, f_r2.submitted && passwordAuthentication_r4.errors));\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(16, passwordAuthentication_r4.errors && f_r2.submitted ? 16 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(18, f_r2.submitted && ctx.form.password !== ctx.form.passwordAuthentication ? 18 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(20, f_r2.submitted && ctx.isLoginFailed ? 20 : -1);\n        }\n      },\n      dependencies: [i4.NgClass, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.PatternValidator, i5.NgModel, i5.NgForm],\n      styles: [\"label[_ngcontent-%COMP%]{display:block;margin-top:10px}.card-container.card[_ngcontent-%COMP%]{max-width:400px!important;padding:40px}.card[_ngcontent-%COMP%]{background-color:#f7f7f7;padding:20px 25px 30px;margin:50px auto 25px;border-radius:2px;box-shadow:0 2px 2px #0000004d}.profile-img-card[_ngcontent-%COMP%]{width:96px;height:96px;margin:0 auto 10px;display:block;border-radius:50%}\"]\n    });\n  }\n  return RestartPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}