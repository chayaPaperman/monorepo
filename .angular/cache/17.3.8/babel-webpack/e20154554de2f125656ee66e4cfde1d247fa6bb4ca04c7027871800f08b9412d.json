{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\n\n/**\n * Avatar represents people using icons, labels and images.\n * @group Components\n */\nconst _c0 = [\"*\"];\nfunction Avatar_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\nfunction Avatar_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r0.icon);\n    i0.ɵɵproperty(\"ngClass\", \"p-avatar-icon\");\n  }\n}\nfunction Avatar_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Avatar_ng_template_3_span_0_Template, 1, 3, \"span\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const imageTemplate_r2 = i0.ɵɵreference(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.icon)(\"ngIfElse\", imageTemplate_r2);\n  }\n}\nfunction Avatar_ng_template_5_img_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 8);\n    i0.ɵɵlistener(\"error\", function Avatar_ng_template_5_img_0_Template_img_error_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.imageError($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r0.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel);\n  }\n}\nfunction Avatar_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Avatar_ng_template_5_img_0_Template, 1, 2, \"img\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.image);\n  }\n}\nlet Avatar = /*#__PURE__*/(() => {\n  class Avatar {\n    /**\n     * Defines the text to display.\n     * @group Props\n     */\n    label;\n    /**\n     * Defines the icon to display.\n     * @group Props\n     */\n    icon;\n    /**\n     * Defines the image to display.\n     * @group Props\n     */\n    image;\n    /**\n     * Size of the element.\n     * @group Props\n     */\n    size = 'normal';\n    /**\n     * Shape of the element.\n     * @group Props\n     */\n    shape = 'square';\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Establishes a string value that labels the component.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * This event is triggered if an error occurs while loading an image file.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onImageError = new EventEmitter();\n    containerClass() {\n      return {\n        'p-avatar p-component': true,\n        'p-avatar-image': this.image != null,\n        'p-avatar-circle': this.shape === 'circle',\n        'p-avatar-lg': this.size === 'large',\n        'p-avatar-xl': this.size === 'xlarge'\n      };\n    }\n    imageError(event) {\n      this.onImageError.emit(event);\n    }\n    static ɵfac = function Avatar_Factory(t) {\n      return new (t || Avatar)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Avatar,\n      selectors: [[\"p-avatar\"]],\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        label: \"label\",\n        icon: \"icon\",\n        image: \"image\",\n        size: \"size\",\n        shape: \"shape\",\n        style: \"style\",\n        styleClass: \"styleClass\",\n        ariaLabel: \"ariaLabel\",\n        ariaLabelledBy: \"ariaLabelledBy\"\n      },\n      outputs: {\n        onImageError: \"onImageError\"\n      },\n      ngContentSelectors: _c0,\n      decls: 7,\n      vars: 9,\n      consts: [[\"iconTemplate\", \"\"], [\"imageTemplate\", \"\"], [3, \"ngClass\", \"ngStyle\"], [\"class\", \"p-avatar-text\", 4, \"ngIf\", \"ngIfElse\"], [1, \"p-avatar-text\"], [3, \"class\", \"ngClass\", 4, \"ngIf\", \"ngIfElse\"], [3, \"ngClass\"], [3, \"src\", \"error\", 4, \"ngIf\"], [3, \"error\", \"src\"]],\n      template: function Avatar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 2);\n          i0.ɵɵprojection(1);\n          i0.ɵɵtemplate(2, Avatar_span_2_Template, 2, 1, \"span\", 3)(3, Avatar_ng_template_3_Template, 1, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(5, Avatar_ng_template_5_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const iconTemplate_r4 = i0.ɵɵreference(4);\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n          i0.ɵɵattribute(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"data-pc-name\", \"avatar\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.label)(\"ngIfElse\", iconTemplate_r4);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle],\n      styles: [\"@layer primeng{.p-avatar{display:inline-flex;align-items:center;justify-content:center;width:2rem;height:2rem;font-size:1rem}.p-avatar.p-avatar-image{background-color:transparent}.p-avatar.p-avatar-circle{border-radius:50%;overflow:hidden}.p-avatar .p-avatar-icon{font-size:1rem}.p-avatar img{width:100%;height:100%}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return Avatar;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AvatarModule = /*#__PURE__*/(() => {\n  class AvatarModule {\n    static ɵfac = function AvatarModule_Factory(t) {\n      return new (t || AvatarModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: AvatarModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n  return AvatarModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Avatar, AvatarModule };\n//# sourceMappingURL=primeng-avatar.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}