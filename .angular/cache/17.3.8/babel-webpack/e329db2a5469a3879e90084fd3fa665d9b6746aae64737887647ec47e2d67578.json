{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"../_services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport let BoardUserComponent = /*#__PURE__*/(() => {\n  class BoardUserComponent {\n    constructor(userService, authService, router) {\n      this.userService = userService;\n      this.authService = authService;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.userService.getUserBoard().subscribe({\n        next: data => {\n          this.content = data;\n        },\n        error: err => {\n          if (err.error) {\n            try {\n              const res = JSON.parse(err.error);\n              this.content = res.message;\n            } catch {\n              this.content = `Error with status: ${err.status} - ${err.statusText}`;\n            }\n          } else {\n            this.content = `Error with status: ${err.status}`;\n          }\n        }\n      });\n    }\n    static #_ = this.ɵfac = function BoardUserComponent_Factory(t) {\n      return new (t || BoardUserComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BoardUserComponent,\n      selectors: [[\"app-board-user\"]],\n      decls: 4,\n      vars: 1,\n      consts: [[1, \"container\"], [1, \"jumbotron\"]],\n      template: function BoardUserComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"header\", 1)(2, \"p\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.content);\n        }\n      }\n    });\n  }\n  return BoardUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}