{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let EventBusService = /*#__PURE__*/(() => {\n  class EventBusService {\n    constructor() {\n      this.subject$ = new Subject();\n    }\n    emit(event) {\n      this.subject$.next(event);\n    }\n    on(eventName, action) {\n      return this.subject$.pipe(filter(e => e.name === eventName), map(e => e[\"value\"])).subscribe(action);\n    }\n    static #_ = this.ɵfac = function EventBusService_Factory(t) {\n      return new (t || EventBusService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EventBusService,\n      factory: EventBusService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return EventBusService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}