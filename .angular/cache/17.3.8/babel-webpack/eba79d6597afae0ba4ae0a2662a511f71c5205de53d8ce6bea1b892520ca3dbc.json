{"ast":null,"code":"import * as i4 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/common/http';\nimport { HttpEventType } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, booleanAttribute, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i5 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport { PlusIcon } from 'primeng/icons/plus';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { UploadIcon } from 'primeng/icons/upload';\nimport * as i7 from 'primeng/messages';\nimport { MessagesModule } from 'primeng/messages';\nimport * as i6 from 'primeng/progressbar';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport * as i8 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from '@angular/platform-browser';\n\n/**\n * FileUpload is an advanced uploader with dragdrop support, multi file uploads, auto uploading, progress tracking and validations.\n * @group Components\n */\nconst _c0 = [\"advancedfileinput\"];\nconst _c1 = [\"basicfileinput\"];\nconst _c2 = [\"content\"];\nconst _c3 = (a0, a1, a2, a3, a4) => ({\n  $implicit: a0,\n  uploadedFiles: a1,\n  chooseCallback: a2,\n  clearCallback: a3,\n  uploadCallback: a4\n});\nconst _c4 = (a0, a1, a2, a3, a4, a5, a6, a7) => ({\n  $implicit: a0,\n  uploadedFiles: a1,\n  chooseCallback: a2,\n  clearCallback: a3,\n  removeUploadedFileCallback: a4,\n  removeFileCallback: a5,\n  progress: a6,\n  messages: a7\n});\nconst _c5 = (a0, a1) => ({\n  \"p-focus\": a0,\n  \"p-disabled\": a1\n});\nconst _c6 = (a0, a1, a2, a3) => ({\n  \"p-button p-component p-fileupload-choose\": true,\n  \"p-button-icon-only\": a0,\n  \"p-fileupload-choose-selected\": a1,\n  \"p-focus\": a2,\n  \"p-disabled\": a3\n});\nfunction FileUpload_div_0_ng_container_4_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 21);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r1.chooseIcon);\n    i0.ɵɵproperty(\"ngClass\", \"p-button-icon p-button-icon-left\");\n    i0.ɵɵattribute(\"aria-label\", true)(\"data-pc-section\", \"chooseicon\");\n  }\n}\nfunction FileUpload_div_0_ng_container_4_ng_container_5_PlusIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"PlusIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-button-icon p-button-icon-left\");\n    i0.ɵɵattribute(\"aria-label\", true)(\"data-pc-section\", \"chooseicon\");\n  }\n}\nfunction FileUpload_div_0_ng_container_4_ng_container_5_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction FileUpload_div_0_ng_container_4_ng_container_5_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FileUpload_div_0_ng_container_4_ng_container_5_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction FileUpload_div_0_ng_container_4_ng_container_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtemplate(1, FileUpload_div_0_ng_container_4_ng_container_5_span_2_1_Template, 1, 0, null, 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵattribute(\"aria-label\", true)(\"data-pc-section\", \"chooseicon\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.chooseIconTemplate);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FileUpload_div_0_ng_container_4_ng_container_5_PlusIcon_1_Template, 1, 3, \"PlusIcon\", 22)(2, FileUpload_div_0_ng_container_4_ng_container_5_span_2_Template, 2, 3, \"span\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.chooseIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.chooseIconTemplate);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_8_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.uploadIcon);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_UploadIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"UploadIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-button-icon p-button-icon-left\");\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtemplate(1, FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_span_2_1_Template, 1, 0, null, 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.uploadIconTemplate);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_UploadIcon_1_Template, 1, 1, \"UploadIcon\", 22)(2, FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_span_2_Template, 2, 2, \"span\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.uploadIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.uploadIconTemplate);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 26);\n    i0.ɵɵlistener(\"onClick\", function FileUpload_div_0_ng_container_4_p_button_8_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.upload());\n    });\n    i0.ɵɵtemplate(1, FileUpload_div_0_ng_container_4_p_button_8_span_1_Template, 1, 2, \"span\", 27)(2, FileUpload_div_0_ng_container_4_p_button_8_ng_container_2_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r1.uploadButtonLabel)(\"disabled\", !ctx_r1.hasFiles() || ctx_r1.isFileLimitExceeded())(\"styleClass\", ctx_r1.uploadStyleClass);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.uploadIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.uploadIcon);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cancelIcon);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"TimesIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-button-icon p-button-icon-left\");\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtemplate(1, FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_span_2_1_Template, 1, 0, null, 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.cancelIconTemplate);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_TimesIcon_1_Template, 1, 2, \"TimesIcon\", 22)(2, FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_span_2_Template, 2, 2, \"span\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.cancelIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.cancelIconTemplate);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_p_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 26);\n    i0.ɵɵlistener(\"onClick\", function FileUpload_div_0_ng_container_4_p_button_9_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.clear());\n    });\n    i0.ɵɵtemplate(1, FileUpload_div_0_ng_container_4_p_button_9_span_1_Template, 1, 1, \"span\", 27)(2, FileUpload_div_0_ng_container_4_p_button_9_ng_container_2_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"label\", ctx_r1.cancelButtonLabel)(\"disabled\", !ctx_r1.hasFiles() || ctx_r1.uploading)(\"styleClass\", ctx_r1.cancelStyleClass);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.cancelIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.cancelIcon);\n  }\n}\nfunction FileUpload_div_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 17);\n    i0.ɵɵlistener(\"focus\", function FileUpload_div_0_ng_container_4_Template_span_focus_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onFocus());\n    })(\"blur\", function FileUpload_div_0_ng_container_4_Template_span_blur_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onBlur());\n    })(\"click\", function FileUpload_div_0_ng_container_4_Template_span_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.choose());\n    })(\"keydown.enter\", function FileUpload_div_0_ng_container_4_Template_span_keydown_enter_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.choose());\n    });\n    i0.ɵɵelementStart(2, \"input\", 7, 0);\n    i0.ɵɵlistener(\"change\", function FileUpload_div_0_ng_container_4_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onFileSelect($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, FileUpload_div_0_ng_container_4_span_4_Template, 1, 5, \"span\", 18)(5, FileUpload_div_0_ng_container_4_ng_container_5_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementStart(6, \"span\", 19);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, FileUpload_div_0_ng_container_4_p_button_8_Template, 3, 5, \"p-button\", 20)(9, FileUpload_div_0_ng_container_4_p_button_9_Template, 3, 5, \"p-button\", 20);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.chooseStyleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(16, _c5, ctx_r1.focus, ctx_r1.disabled || ctx_r1.isChooseDisabled()));\n    i0.ɵɵattribute(\"data-pc-section\", \"choosebutton\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"multiple\", ctx_r1.multiple)(\"accept\", ctx_r1.accept)(\"disabled\", ctx_r1.disabled || ctx_r1.isChooseDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.browseFilesLabel)(\"title\", \"\")(\"data-pc-section\", \"input\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.chooseIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.chooseIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"choosebuttonlabel\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.chooseButtonLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.auto && ctx_r1.showUploadButton);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.auto && ctx_r1.showCancelButton);\n  }\n}\nfunction FileUpload_div_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction FileUpload_div_0_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction FileUpload_div_0_p_progressBar_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-progressBar\", 29);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r1.progress)(\"showValue\", false);\n  }\n}\nfunction FileUpload_div_0_div_11_div_1_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"img\", 35);\n    i0.ɵɵlistener(\"error\", function FileUpload_div_0_div_11_div_1_div_1_div_1_Template_img_error_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(5);\n      return i0.ɵɵresetView(ctx_r1.imageError($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", file_r8.objectURL, i0.ɵɵsanitizeUrl)(\"width\", ctx_r1.previewWidth);\n  }\n}\nfunction FileUpload_div_0_div_11_div_1_div_1_TimesIcon_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"TimesIcon\");\n  }\n}\nfunction FileUpload_div_0_div_11_div_1_div_1_9_ng_template_0_Template(rf, ctx) {}\nfunction FileUpload_div_0_div_11_div_1_div_1_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FileUpload_div_0_div_11_div_1_div_1_9_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction FileUpload_div_0_div_11_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, FileUpload_div_0_div_11_div_1_div_1_div_1_Template, 2, 2, \"div\", 9);\n    i0.ɵɵelementStart(2, \"div\", 33);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\")(7, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function FileUpload_div_0_div_11_div_1_div_1_Template_button_click_7_listener($event) {\n      const i_r9 = i0.ɵɵrestoreView(_r6).index;\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.remove($event, i_r9));\n    });\n    i0.ɵɵtemplate(8, FileUpload_div_0_div_11_div_1_div_1_TimesIcon_8_Template, 1, 0, \"TimesIcon\", 9)(9, FileUpload_div_0_div_11_div_1_div_1_9_Template, 1, 0, null, 11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const file_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isImage(file_r8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(file_r8.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatSize(file_r8.size));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r1.removeStyleClass);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.uploading);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.cancelIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.cancelIconTemplate);\n  }\n}\nfunction FileUpload_div_0_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FileUpload_div_0_div_11_div_1_div_1_Template, 10, 8, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.files);\n  }\n}\nfunction FileUpload_div_0_div_11_div_2_ng_template_1_Template(rf, ctx) {}\nfunction FileUpload_div_0_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FileUpload_div_0_div_11_div_2_ng_template_1_Template, 0, 0, \"ng-template\", 36);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.files)(\"ngForTemplate\", ctx_r1.fileTemplate);\n  }\n}\nfunction FileUpload_div_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, FileUpload_div_0_div_11_div_1_Template, 2, 1, \"div\", 9)(2, FileUpload_div_0_div_11_div_2_Template, 2, 2, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.fileTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.fileTemplate);\n  }\n}\nfunction FileUpload_div_0_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction FileUpload_div_0_div_13_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction FileUpload_div_0_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtemplate(1, FileUpload_div_0_div_13_ng_container_1_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.emptyTemplate);\n  }\n}\nfunction FileUpload_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"input\", 7, 0);\n    i0.ɵɵlistener(\"change\", function FileUpload_div_0_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFileSelect($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtemplate(4, FileUpload_div_0_ng_container_4_Template, 10, 19, \"ng-container\", 9)(5, FileUpload_div_0_ng_container_5_Template, 1, 0, \"ng-container\", 10)(6, FileUpload_div_0_ng_container_6_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 12, 1);\n    i0.ɵɵlistener(\"dragenter\", function FileUpload_div_0_Template_div_dragenter_7_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragEnter($event));\n    })(\"dragleave\", function FileUpload_div_0_Template_div_dragleave_7_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDragLeave($event));\n    })(\"drop\", function FileUpload_div_0_Template_div_drop_7_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDrop($event));\n    });\n    i0.ɵɵtemplate(9, FileUpload_div_0_p_progressBar_9_Template, 1, 2, \"p-progressBar\", 13);\n    i0.ɵɵelement(10, \"p-messages\", 14);\n    i0.ɵɵtemplate(11, FileUpload_div_0_div_11_Template, 3, 2, \"div\", 15)(12, FileUpload_div_0_ng_container_12_Template, 1, 0, \"ng-container\", 10)(13, FileUpload_div_0_div_13_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.styleClass);\n    i0.ɵɵproperty(\"ngClass\", \"p-fileupload p-fileupload-advanced p-component\")(\"ngStyle\", ctx_r1.style);\n    i0.ɵɵattribute(\"data-pc-name\", \"fileupload\")(\"data-pc-section\", \"root\");\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"display\", \"none\");\n    i0.ɵɵproperty(\"multiple\", ctx_r1.multiple)(\"accept\", ctx_r1.accept)(\"disabled\", ctx_r1.disabled || ctx_r1.isChooseDisabled());\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.browseFilesLabel)(\"title\", \"\")(\"data-pc-section\", \"input\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"buttonbar\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.headerTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction5(27, _c3, ctx_r1.files, ctx_r1.uploadedFiles, ctx_r1.choose.bind(ctx_r1), ctx_r1.clear.bind(ctx_r1), ctx_r1.upload.bind(ctx_r1)));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.toolbarTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"content\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasFiles());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r1.msgs)(\"enableService\", false);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasFiles());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction8(33, _c4, ctx_r1.files, ctx_r1.uploadedFiles, ctx_r1.choose.bind(ctx_r1), ctx_r1.clear.bind(ctx_r1), ctx_r1.removeUploadedFile.bind(ctx_r1), ctx_r1.remove.bind(ctx_r1), ctx_r1.progress, ctx_r1.msgs));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.emptyTemplate && !ctx_r1.hasFiles() && !ctx_r1.hasUploadedFiles());\n  }\n}\nfunction FileUpload_div_1_ng_container_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.uploadIcon);\n  }\n}\nfunction FileUpload_div_1_ng_container_3_ng_container_2_UploadIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"UploadIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-button-icon p-button-icon-left\");\n  }\n}\nfunction FileUpload_div_1_ng_container_3_ng_container_2_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction FileUpload_div_1_ng_container_3_ng_container_2_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FileUpload_div_1_ng_container_3_ng_container_2_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction FileUpload_div_1_ng_container_3_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtemplate(1, FileUpload_div_1_ng_container_3_ng_container_2_span_2_1_Template, 1, 0, null, 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.uploadIconTemplate);\n  }\n}\nfunction FileUpload_div_1_ng_container_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FileUpload_div_1_ng_container_3_ng_container_2_UploadIcon_1_Template, 1, 1, \"UploadIcon\", 22)(2, FileUpload_div_1_ng_container_3_ng_container_2_span_2_Template, 2, 1, \"span\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.uploadIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.uploadIconTemplate);\n  }\n}\nfunction FileUpload_div_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FileUpload_div_1_ng_container_3_span_1_Template, 1, 1, \"span\", 27)(2, FileUpload_div_1_ng_container_3_ng_container_2_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.uploadIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.uploadIcon);\n  }\n}\nfunction FileUpload_div_1_ng_template_4_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 44);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.chooseIcon);\n  }\n}\nfunction FileUpload_div_1_ng_template_4_ng_container_1_PlusIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"PlusIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-button-icon p-button-icon-left pi\");\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"uploadicon\");\n  }\n}\nfunction FileUpload_div_1_ng_template_4_ng_container_1_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction FileUpload_div_1_ng_template_4_ng_container_1_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FileUpload_div_1_ng_template_4_ng_container_1_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction FileUpload_div_1_ng_template_4_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 46);\n    i0.ɵɵtemplate(1, FileUpload_div_1_ng_template_4_ng_container_1_span_2_1_Template, 1, 0, null, 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"uploadicon\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.chooseIconTemplate);\n  }\n}\nfunction FileUpload_div_1_ng_template_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FileUpload_div_1_ng_template_4_ng_container_1_PlusIcon_1_Template, 1, 3, \"PlusIcon\", 22)(2, FileUpload_div_1_ng_template_4_ng_container_1_span_2_Template, 2, 3, \"span\", 45);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.chooseIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.chooseIconTemplate);\n  }\n}\nfunction FileUpload_div_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FileUpload_div_1_ng_template_4_span_0_Template, 1, 1, \"span\", 43)(1, FileUpload_div_1_ng_template_4_ng_container_1_Template, 3, 2, \"ng-container\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.chooseIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.chooseIcon);\n  }\n}\nfunction FileUpload_div_1_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.basicButtonLabel);\n  }\n}\nfunction FileUpload_div_1_input_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 47, 3);\n    i0.ɵɵlistener(\"change\", function FileUpload_div_1_input_7_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onFileSelect($event));\n    })(\"focus\", function FileUpload_div_1_input_7_Template_input_focus_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onFocus());\n    })(\"blur\", function FileUpload_div_1_input_7_Template_input_blur_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onBlur());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"accept\", ctx_r1.accept)(\"multiple\", ctx_r1.multiple)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.browseFilesLabel)(\"data-pc-section\", \"input\");\n  }\n}\nfunction FileUpload_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵelement(1, \"p-messages\", 14);\n    i0.ɵɵelementStart(2, \"span\", 39);\n    i0.ɵɵlistener(\"click\", function FileUpload_div_1_Template_span_click_2_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onBasicUploaderClick());\n    })(\"keydown\", function FileUpload_div_1_Template_span_keydown_2_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onBasicKeydown($event));\n    });\n    i0.ɵɵtemplate(3, FileUpload_div_1_ng_container_3_Template, 3, 2, \"ng-container\", 40)(4, FileUpload_div_1_ng_template_4_Template, 2, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor)(6, FileUpload_div_1_span_6_Template, 2, 2, \"span\", 41)(7, FileUpload_div_1_input_7_Template, 2, 5, \"input\", 42);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const chooseSection_r12 = i0.ɵɵreference(5);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-name\", \"fileupload\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r1.msgs)(\"enableService\", false);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.styleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(12, _c6, !ctx_r1.basicButtonLabel, ctx_r1.hasFiles(), ctx_r1.focus, ctx_r1.disabled))(\"ngStyle\", ctx_r1.style);\n    i0.ɵɵattribute(\"data-pc-section\", \"choosebutton\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasFiles() && !ctx_r1.auto)(\"ngIfElse\", chooseSection_r12);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.basicButtonLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.hasFiles());\n  }\n}\nlet FileUpload = /*#__PURE__*/(() => {\n  class FileUpload {\n    document;\n    platformId;\n    renderer;\n    el;\n    sanitizer;\n    zone;\n    http;\n    cd;\n    config;\n    /**\n     * Name of the request parameter to identify the files at backend.\n     * @group Props\n     */\n    name;\n    /**\n     * Remote url to upload the files.\n     * @group Props\n     */\n    url;\n    /**\n     * HTTP method to send the files to the url such as \"post\" and \"put\".\n     * @group Props\n     */\n    method = 'post';\n    /**\n     * Used to select multiple files at once from file dialog.\n     * @group Props\n     */\n    multiple;\n    /**\n     * Comma-separated list of pattern to restrict the allowed file types. Can be any combination of either the MIME types (such as \"image/*\") or the file extensions (such as \".jpg\").\n     * @group Props\n     */\n    accept;\n    /**\n     * Disables the upload functionality.\n     * @group Props\n     */\n    disabled;\n    /**\n     * When enabled, upload begins automatically after selection is completed.\n     * @group Props\n     */\n    auto;\n    /**\n     * Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.\n     * @group Props\n     */\n    withCredentials;\n    /**\n     * Maximum file size allowed in bytes.\n     * @group Props\n     */\n    maxFileSize;\n    /**\n     * Summary message of the invalid file size.\n     * @group Props\n     */\n    invalidFileSizeMessageSummary = '{0}: Invalid file size, ';\n    /**\n     * Detail message of the invalid file size.\n     * @group Props\n     */\n    invalidFileSizeMessageDetail = 'maximum upload size is {0}.';\n    /**\n     * Summary message of the invalid file type.\n     * @group Props\n     */\n    invalidFileTypeMessageSummary = '{0}: Invalid file type, ';\n    /**\n     * Detail message of the invalid file type.\n     * @group Props\n     */\n    invalidFileTypeMessageDetail = 'allowed file types: {0}.';\n    /**\n     * Detail message of the invalid file type.\n     * @group Props\n     */\n    invalidFileLimitMessageDetail = 'limit is {0} at most.';\n    /**\n     * Summary message of the invalid file type.\n     * @group Props\n     */\n    invalidFileLimitMessageSummary = 'Maximum number of files exceeded, ';\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Width of the image thumbnail in pixels.\n     * @group Props\n     */\n    previewWidth = 50;\n    /**\n     * Label of the choose button. Defaults to PrimeNG Locale configuration.\n     * @group Props\n     */\n    chooseLabel;\n    /**\n     * Label of the upload button. Defaults to PrimeNG Locale configuration.\n     * @group Props\n     */\n    uploadLabel;\n    /**\n     * Label of the cancel button. Defaults to PrimeNG Locale configuration.\n     * @group Props\n     */\n    cancelLabel;\n    /**\n     * Icon of the choose button.\n     * @group Props\n     */\n    chooseIcon;\n    /**\n     * Icon of the upload button.\n     * @group Props\n     */\n    uploadIcon;\n    /**\n     * Icon of the cancel button.\n     * @group Props\n     */\n    cancelIcon;\n    /**\n     * Whether to show the upload button.\n     * @group Props\n     */\n    showUploadButton = true;\n    /**\n     * Whether to show the cancel button.\n     * @group Props\n     */\n    showCancelButton = true;\n    /**\n     * Defines the UI of the component.\n     * @group Props\n     */\n    mode = 'advanced';\n    /**\n     * HttpHeaders class represents the header configuration options for an HTTP request.\n     * @group Props\n     */\n    headers;\n    /**\n     * Whether to use the default upload or a manual implementation defined in uploadHandler callback. Defaults to PrimeNG Locale configuration.\n     * @group Props\n     */\n    customUpload;\n    /**\n     * Maximum number of files that can be uploaded.\n     * @group Props\n     */\n    fileLimit;\n    /**\n     * Style class of the upload button.\n     * @group Props\n     */\n    uploadStyleClass;\n    /**\n     * Style class of the cancel button.\n     * @group Props\n     */\n    cancelStyleClass;\n    /**\n     * Style class of the remove button.\n     * @group Props\n     */\n    removeStyleClass;\n    /**\n     * Style class of the choose button.\n     * @group Props\n     */\n    chooseStyleClass;\n    /**\n     * Callback to invoke before file upload is initialized.\n     * @param {FileBeforeUploadEvent} event - Custom upload event.\n     * @group Emits\n     */\n    onBeforeUpload = new EventEmitter();\n    /**\n     * An event indicating that the request was sent to the server. Useful when a request may be retried multiple times, to distinguish between retries on the final event stream.\n     * @param {FileSendEvent} event - Custom send event.\n     * @group Emits\n     */\n    onSend = new EventEmitter();\n    /**\n     * Callback to invoke when file upload is complete.\n     * @param {FileUploadEvent} event - Custom upload event.\n     * @group Emits\n     */\n    onUpload = new EventEmitter();\n    /**\n     * Callback to invoke if file upload fails.\n     * @param {FileUploadErrorEvent} event - Custom error event.\n     * @group Emits\n     */\n    onError = new EventEmitter();\n    /**\n     * Callback to invoke when files in queue are removed without uploading using clear all button.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onClear = new EventEmitter();\n    /**\n     * Callback to invoke when a file is removed without uploading using clear button of a file.\n     * @param {FileRemoveEvent} event - Remove event.\n     * @group Emits\n     */\n    onRemove = new EventEmitter();\n    /**\n     * Callback to invoke when files are selected.\n     * @param {FileSelectEvent} event - Select event.\n     * @group Emits\n     */\n    onSelect = new EventEmitter();\n    /**\n     * Callback to invoke when files are being uploaded.\n     * @param {FileProgressEvent} event - Progress event.\n     * @group Emits\n     */\n    onProgress = new EventEmitter();\n    /**\n     * Callback to invoke in custom upload mode to upload the files manually.\n     * @param {FileUploadHandlerEvent} event - Upload handler event.\n     * @group Emits\n     */\n    uploadHandler = new EventEmitter();\n    /**\n     * This event is triggered if an error occurs while loading an image file.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onImageError = new EventEmitter();\n    /**\n     * This event is triggered if an error occurs while loading an image file.\n     * @param {RemoveUploadedFileEvent} event - Remove event.\n     * @group Emits\n     */\n    onRemoveUploadedFile = new EventEmitter();\n    templates;\n    advancedFileInput;\n    basicFileInput;\n    content;\n    set files(files) {\n      this._files = [];\n      for (let i = 0; i < files.length; i++) {\n        let file = files[i];\n        if (this.validate(file)) {\n          if (this.isImage(file)) {\n            file.objectURL = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(files[i]));\n          }\n          this._files.push(files[i]);\n        }\n      }\n    }\n    get files() {\n      return this._files;\n    }\n    get basicButtonLabel() {\n      if (this.auto || !this.hasFiles()) {\n        return this.chooseLabel;\n      }\n      return this.uploadLabel ?? this.files[0].name;\n    }\n    _files = [];\n    progress = 0;\n    dragHighlight;\n    msgs;\n    fileTemplate;\n    headerTemplate;\n    contentTemplate;\n    toolbarTemplate;\n    chooseIconTemplate;\n    uploadIconTemplate;\n    cancelIconTemplate;\n    emptyTemplate;\n    uploadedFileCount = 0;\n    focus;\n    uploading;\n    duplicateIEEvent; // flag to recognize duplicate onchange event for file input\n    translationSubscription;\n    dragOverListener;\n    uploadedFiles = [];\n    constructor(document, platformId, renderer, el, sanitizer, zone, http, cd, config) {\n      this.document = document;\n      this.platformId = platformId;\n      this.renderer = renderer;\n      this.el = el;\n      this.sanitizer = sanitizer;\n      this.zone = zone;\n      this.http = http;\n      this.cd = cd;\n      this.config = config;\n    }\n    ngAfterContentInit() {\n      this.templates?.forEach(item => {\n        switch (item.getType()) {\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n          case 'file':\n            this.fileTemplate = item.template;\n            break;\n          case 'content':\n            this.contentTemplate = item.template;\n            break;\n          case 'toolbar':\n            this.toolbarTemplate = item.template;\n            break;\n          case 'chooseicon':\n            this.chooseIconTemplate = item.template;\n            break;\n          case 'uploadicon':\n            this.uploadIconTemplate = item.template;\n            break;\n          case 'cancelicon':\n            this.cancelIconTemplate = item.template;\n            break;\n          case 'empty':\n            this.emptyTemplate = item.template;\n            break;\n          default:\n            this.fileTemplate = item.template;\n            break;\n        }\n      });\n    }\n    ngOnInit() {\n      this.translationSubscription = this.config.translationObserver.subscribe(() => {\n        this.cd.markForCheck();\n      });\n    }\n    ngAfterViewInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (this.mode === 'advanced') {\n          this.zone.runOutsideAngular(() => {\n            if (this.content) {\n              this.dragOverListener = this.renderer.listen(this.content.nativeElement, 'dragover', this.onDragOver.bind(this));\n            }\n          });\n        }\n      }\n    }\n    getTranslation(option) {\n      return this.config.getTranslation(option);\n    }\n    choose() {\n      this.advancedFileInput?.nativeElement.click();\n    }\n    onFileSelect(event) {\n      if (event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\n        this.duplicateIEEvent = false;\n        return;\n      }\n      this.msgs = [];\n      if (!this.multiple) {\n        this.files = [];\n      }\n      let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n      for (let i = 0; i < files.length; i++) {\n        let file = files[i];\n        if (!this.isFileSelected(file)) {\n          if (this.validate(file)) {\n            if (this.isImage(file)) {\n              file.objectURL = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(files[i]));\n            }\n            this.files.push(files[i]);\n          }\n        }\n      }\n      this.onSelect.emit({\n        originalEvent: event,\n        files: files,\n        currentFiles: this.files\n      });\n      // this will check the fileLimit with the uploaded files\n      this.checkFileLimit(files);\n      if (this.hasFiles() && this.auto && (this.mode !== 'advanced' || !this.isFileLimitExceeded())) {\n        this.upload();\n      }\n      if (event.type !== 'drop' && this.isIE11()) {\n        this.clearIEInput();\n      } else {\n        this.clearInputElement();\n      }\n    }\n    isFileSelected(file) {\n      for (let sFile of this.files) {\n        if (sFile.name + sFile.type + sFile.size === file.name + file.type + file.size) {\n          return true;\n        }\n      }\n      return false;\n    }\n    isIE11() {\n      if (isPlatformBrowser(this.platformId)) {\n        return !!this.document.defaultView['MSInputMethodContext'] && !!this.document['documentMode'];\n      }\n    }\n    validate(file) {\n      this.msgs = this.msgs || [];\n      if (this.accept && !this.isFileTypeValid(file)) {\n        this.msgs.push({\n          severity: 'error',\n          summary: this.invalidFileTypeMessageSummary.replace('{0}', file.name),\n          detail: this.invalidFileTypeMessageDetail.replace('{0}', this.accept)\n        });\n        return false;\n      }\n      if (this.maxFileSize && file.size > this.maxFileSize) {\n        this.msgs.push({\n          severity: 'error',\n          summary: this.invalidFileSizeMessageSummary.replace('{0}', file.name),\n          detail: this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxFileSize))\n        });\n        return false;\n      }\n      return true;\n    }\n    isFileTypeValid(file) {\n      let acceptableTypes = this.accept?.split(',').map(type => type.trim());\n      for (let type of acceptableTypes) {\n        let acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type) : file.type == type || this.getFileExtension(file).toLowerCase() === type.toLowerCase();\n        if (acceptable) {\n          return true;\n        }\n      }\n      return false;\n    }\n    getTypeClass(fileType) {\n      return fileType.substring(0, fileType.indexOf('/'));\n    }\n    isWildcard(fileType) {\n      return fileType.indexOf('*') !== -1;\n    }\n    getFileExtension(file) {\n      return '.' + file.name.split('.').pop();\n    }\n    isImage(file) {\n      return /^image\\//.test(file.type);\n    }\n    onImageLoad(img) {\n      window.URL.revokeObjectURL(img.src);\n    }\n    /**\n     * Uploads the selected files.\n     * @group Method\n     */\n    upload() {\n      if (this.customUpload) {\n        if (this.fileLimit) {\n          this.uploadedFileCount += this.files.length;\n        }\n        this.uploadHandler.emit({\n          files: this.files\n        });\n        this.cd.markForCheck();\n      } else {\n        this.uploading = true;\n        this.msgs = [];\n        let formData = new FormData();\n        this.onBeforeUpload.emit({\n          formData: formData\n        });\n        for (let i = 0; i < this.files.length; i++) {\n          formData.append(this.name, this.files[i], this.files[i].name);\n        }\n        this.http.request(this.method, this.url, {\n          body: formData,\n          headers: this.headers,\n          reportProgress: true,\n          observe: 'events',\n          withCredentials: this.withCredentials\n        }).subscribe(event => {\n          switch (event.type) {\n            case HttpEventType.Sent:\n              this.onSend.emit({\n                originalEvent: event,\n                formData: formData\n              });\n              break;\n            case HttpEventType.Response:\n              this.uploading = false;\n              this.progress = 0;\n              if (event['status'] >= 200 && event['status'] < 300) {\n                if (this.fileLimit) {\n                  this.uploadedFileCount += this.files.length;\n                }\n                this.onUpload.emit({\n                  originalEvent: event,\n                  files: this.files\n                });\n              } else {\n                this.onError.emit({\n                  files: this.files\n                });\n              }\n              this.uploadedFiles.push(...this.files);\n              this.clear();\n              break;\n            case HttpEventType.UploadProgress:\n              {\n                if (event['loaded']) {\n                  this.progress = Math.round(event['loaded'] * 100 / event['total']);\n                }\n                this.onProgress.emit({\n                  originalEvent: event,\n                  progress: this.progress\n                });\n                break;\n              }\n          }\n          this.cd.markForCheck();\n        }, error => {\n          this.uploading = false;\n          this.onError.emit({\n            files: this.files,\n            error: error\n          });\n        });\n      }\n    }\n    /**\n     * Clears the files list.\n     * @group Method\n     */\n    clear() {\n      this.files = [];\n      this.uploadedFileCount = 0;\n      this.onClear.emit();\n      this.clearInputElement();\n      this.cd.markForCheck();\n    }\n    /**\n     * Removes a single file.\n     * @param {Event} event - Browser event.\n     * @param {Number} index - Index of the file.\n     * @group Method\n     */\n    remove(event, index) {\n      this.clearInputElement();\n      this.onRemove.emit({\n        originalEvent: event,\n        file: this.files[index]\n      });\n      this.files.splice(index, 1);\n      this.checkFileLimit(this.files);\n    }\n    /**\n     * Removes uploaded file.\n     * @param {Number} index - Index of the file to be removed.\n     * @group Method\n     */\n    removeUploadedFile(index) {\n      let removedFile = this.uploadedFiles.splice(index, 1)[0];\n      this.uploadedFiles = [...this.uploadedFiles];\n      this.onRemoveUploadedFile.emit({\n        file: removedFile,\n        files: this.uploadedFiles\n      });\n    }\n    isFileLimitExceeded() {\n      const isAutoMode = this.auto;\n      const totalFileCount = isAutoMode ? this.files.length : this.files.length + this.uploadedFileCount;\n      if (this.fileLimit && this.fileLimit <= totalFileCount && this.focus) {\n        this.focus = false;\n      }\n      return this.fileLimit && this.fileLimit < totalFileCount;\n    }\n    isChooseDisabled() {\n      if (this.auto) {\n        return this.fileLimit && this.fileLimit <= this.files.length;\n      } else {\n        return this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount;\n      }\n    }\n    checkFileLimit(files) {\n      this.msgs ??= [];\n      const hasExistingValidationMessages = this.msgs.length > 0 && this.fileLimit < files.length;\n      if (this.isFileLimitExceeded() || hasExistingValidationMessages) {\n        this.msgs.push({\n          severity: 'error',\n          summary: this.invalidFileLimitMessageSummary.replace('{0}', this.fileLimit.toString()),\n          detail: this.invalidFileLimitMessageDetail.replace('{0}', this.fileLimit.toString())\n        });\n      }\n    }\n    clearInputElement() {\n      if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\n        this.advancedFileInput.nativeElement.value = '';\n      }\n      if (this.basicFileInput && this.basicFileInput.nativeElement) {\n        this.basicFileInput.nativeElement.value = '';\n      }\n    }\n    clearIEInput() {\n      if (this.advancedFileInput && this.advancedFileInput.nativeElement) {\n        this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\n        this.advancedFileInput.nativeElement.value = '';\n      }\n    }\n    hasFiles() {\n      return this.files && this.files.length > 0;\n    }\n    hasUploadedFiles() {\n      return this.uploadedFiles && this.uploadedFiles.length > 0;\n    }\n    onDragEnter(e) {\n      if (!this.disabled) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n    onDragOver(e) {\n      if (!this.disabled) {\n        DomHandler.addClass(this.content?.nativeElement, 'p-fileupload-highlight');\n        this.dragHighlight = true;\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n    onDragLeave(event) {\n      if (!this.disabled) {\n        DomHandler.removeClass(this.content?.nativeElement, 'p-fileupload-highlight');\n      }\n    }\n    onDrop(event) {\n      if (!this.disabled) {\n        DomHandler.removeClass(this.content?.nativeElement, 'p-fileupload-highlight');\n        event.stopPropagation();\n        event.preventDefault();\n        let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n        let allowDrop = this.multiple || files && files.length === 1;\n        if (allowDrop) {\n          this.onFileSelect(event);\n        }\n      }\n    }\n    onFocus() {\n      this.focus = true;\n    }\n    onBlur() {\n      this.focus = false;\n    }\n    formatSize(bytes) {\n      const k = 1024;\n      const dm = 3;\n      const sizes = this.getTranslation(TranslationKeys.FILE_SIZE_TYPES);\n      if (bytes === 0) {\n        return `0 ${sizes[0]}`;\n      }\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      const formattedSize = (bytes / Math.pow(k, i)).toFixed(dm);\n      return `${formattedSize} ${sizes[i]}`;\n    }\n    onBasicUploaderClick() {\n      if (this.hasFiles()) this.upload();else this.basicFileInput?.nativeElement.click();\n    }\n    onBasicKeydown(event) {\n      switch (event.code) {\n        case 'Space':\n        case 'Enter':\n          this.onBasicUploaderClick();\n          event.preventDefault();\n          break;\n      }\n    }\n    imageError(event) {\n      this.onImageError.emit(event);\n    }\n    getBlockableElement() {\n      return this.el.nativeElement.children[0];\n    }\n    get chooseButtonLabel() {\n      return this.chooseLabel || this.config.getTranslation(TranslationKeys.CHOOSE);\n    }\n    get uploadButtonLabel() {\n      return this.uploadLabel || this.config.getTranslation(TranslationKeys.UPLOAD);\n    }\n    get cancelButtonLabel() {\n      return this.cancelLabel || this.config.getTranslation(TranslationKeys.CANCEL);\n    }\n    get browseFilesLabel() {\n      return this.config.getTranslation(TranslationKeys.ARIA)[TranslationKeys.BROWSE_FILES];\n    }\n    ngOnDestroy() {\n      if (this.content && this.content.nativeElement) {\n        if (this.dragOverListener) {\n          this.dragOverListener();\n          this.dragOverListener = null;\n        }\n      }\n      if (this.translationSubscription) {\n        this.translationSubscription.unsubscribe();\n      }\n    }\n    static ɵfac = function FileUpload_Factory(t) {\n      return new (t || FileUpload)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.PrimeNGConfig));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: FileUpload,\n      selectors: [[\"p-fileUpload\"]],\n      contentQueries: function FileUpload_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function FileUpload_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.advancedFileInput = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.basicFileInput = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n        }\n      },\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        name: \"name\",\n        url: \"url\",\n        method: \"method\",\n        multiple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"multiple\", \"multiple\", booleanAttribute],\n        accept: \"accept\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        auto: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"auto\", \"auto\", booleanAttribute],\n        withCredentials: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"withCredentials\", \"withCredentials\", booleanAttribute],\n        maxFileSize: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"maxFileSize\", \"maxFileSize\", numberAttribute],\n        invalidFileSizeMessageSummary: \"invalidFileSizeMessageSummary\",\n        invalidFileSizeMessageDetail: \"invalidFileSizeMessageDetail\",\n        invalidFileTypeMessageSummary: \"invalidFileTypeMessageSummary\",\n        invalidFileTypeMessageDetail: \"invalidFileTypeMessageDetail\",\n        invalidFileLimitMessageDetail: \"invalidFileLimitMessageDetail\",\n        invalidFileLimitMessageSummary: \"invalidFileLimitMessageSummary\",\n        style: \"style\",\n        styleClass: \"styleClass\",\n        previewWidth: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"previewWidth\", \"previewWidth\", numberAttribute],\n        chooseLabel: \"chooseLabel\",\n        uploadLabel: \"uploadLabel\",\n        cancelLabel: \"cancelLabel\",\n        chooseIcon: \"chooseIcon\",\n        uploadIcon: \"uploadIcon\",\n        cancelIcon: \"cancelIcon\",\n        showUploadButton: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"showUploadButton\", \"showUploadButton\", booleanAttribute],\n        showCancelButton: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"showCancelButton\", \"showCancelButton\", booleanAttribute],\n        mode: \"mode\",\n        headers: \"headers\",\n        customUpload: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"customUpload\", \"customUpload\", booleanAttribute],\n        fileLimit: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"fileLimit\", \"fileLimit\", value => numberAttribute(value, null)],\n        uploadStyleClass: \"uploadStyleClass\",\n        cancelStyleClass: \"cancelStyleClass\",\n        removeStyleClass: \"removeStyleClass\",\n        chooseStyleClass: \"chooseStyleClass\",\n        files: \"files\"\n      },\n      outputs: {\n        onBeforeUpload: \"onBeforeUpload\",\n        onSend: \"onSend\",\n        onUpload: \"onUpload\",\n        onError: \"onError\",\n        onClear: \"onClear\",\n        onRemove: \"onRemove\",\n        onSelect: \"onSelect\",\n        onProgress: \"onProgress\",\n        uploadHandler: \"uploadHandler\",\n        onImageError: \"onImageError\",\n        onRemoveUploadedFile: \"onRemoveUploadedFile\"\n      },\n      features: [i0.ɵɵInputTransformsFeature],\n      decls: 2,\n      vars: 2,\n      consts: [[\"advancedfileinput\", \"\"], [\"content\", \"\"], [\"chooseSection\", \"\"], [\"basicfileinput\", \"\"], [3, \"ngClass\", \"ngStyle\", \"class\", 4, \"ngIf\"], [\"class\", \"p-fileupload p-fileupload-basic p-component\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [\"type\", \"file\", 3, \"change\", \"multiple\", \"accept\", \"disabled\"], [1, \"p-fileupload-buttonbar\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngTemplateOutlet\"], [1, \"p-fileupload-content\", 3, \"dragenter\", \"dragleave\", \"drop\"], [3, \"value\", \"showValue\", 4, \"ngIf\"], [3, \"value\", \"enableService\"], [\"class\", \"p-fileupload-files\", 4, \"ngIf\"], [\"class\", \"p-fileupload-empty\", 4, \"ngIf\"], [\"pRipple\", \"\", \"tabindex\", \"0\", 1, \"p-button\", \"p-component\", \"p-fileupload-choose\", 3, \"focus\", \"blur\", \"click\", \"keydown.enter\", \"ngClass\"], [3, \"ngClass\", \"class\", 4, \"ngIf\"], [1, \"p-button-label\"], [\"type\", \"button\", 3, \"label\", \"disabled\", \"styleClass\", \"onClick\", 4, \"ngIf\"], [3, \"ngClass\"], [3, \"styleClass\", 4, \"ngIf\"], [\"class\", \"p-button-icon p-button-icon-left\", 4, \"ngIf\"], [3, \"styleClass\"], [1, \"p-button-icon\", \"p-button-icon-left\"], [\"type\", \"button\", 3, \"onClick\", \"label\", \"disabled\", \"styleClass\"], [\"class\", \"p-button-icon p-button-icon-left\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-button-icon\", \"p-button-icon-left\", 3, \"ngClass\"], [3, \"value\", \"showValue\"], [1, \"p-fileupload-files\"], [\"class\", \"p-fileupload-row\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-fileupload-row\"], [1, \"p-fileupload-filename\"], [\"type\", \"button\", \"pButton\", \"\", 1, \"p-button-icon-only\", 3, \"click\", \"disabled\"], [3, \"error\", \"src\", \"width\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTemplate\"], [1, \"p-fileupload-empty\"], [1, \"p-fileupload\", \"p-fileupload-basic\", \"p-component\"], [\"tabindex\", \"0\", \"pRipple\", \"\", 3, \"click\", \"keydown\", \"ngClass\", \"ngStyle\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"p-button-label\", 4, \"ngIf\"], [\"type\", \"file\", 3, \"accept\", \"multiple\", \"disabled\", \"change\", \"focus\", \"blur\", 4, \"ngIf\"], [\"class\", \"p-button-icon p-button-icon-left pi\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-button-icon\", \"p-button-icon-left\", \"pi\", 3, \"ngClass\"], [\"class\", \"p-button-icon p-button-icon-left pi\", 4, \"ngIf\"], [1, \"p-button-icon\", \"p-button-icon-left\", \"pi\"], [\"type\", \"file\", 3, \"change\", \"focus\", \"blur\", \"accept\", \"multiple\", \"disabled\"]],\n      template: function FileUpload_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, FileUpload_div_0_Template, 14, 42, \"div\", 4)(1, FileUpload_div_1_Template, 8, 17, \"div\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"advanced\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mode === \"basic\");\n        }\n      },\n      dependencies: () => [i4.NgClass, i4.NgForOf, i4.NgIf, i4.NgTemplateOutlet, i4.NgStyle, i5.ButtonDirective, i5.Button, i6.ProgressBar, i7.Messages, i8.Ripple, PlusIcon, UploadIcon, TimesIcon],\n      styles: [\"@layer primeng{.p-fileupload-content{position:relative}.p-fileupload-row{display:flex;align-items:center}.p-fileupload-row>div{flex:1 1 auto;width:25%}.p-fileupload-row>div:last-child{text-align:right}.p-fileupload-content .p-progressbar{width:100%;position:absolute;top:0;left:0}.p-button.p-fileupload-choose{position:relative;overflow:hidden}.p-button.p-fileupload-choose input[type=file],.p-fileupload-choose.p-fileupload-choose-selected input[type=file]{display:none}.p-fluid .p-fileupload .p-button{width:auto}.p-fileupload-filename{word-break:break-all}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return FileUpload;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FileUploadModule = /*#__PURE__*/(() => {\n  class FileUploadModule {\n    static ɵfac = function FileUploadModule_Factory(t) {\n      return new (t || FileUploadModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: FileUploadModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, SharedModule, ButtonModule, ProgressBarModule, MessagesModule, RippleModule, PlusIcon, UploadIcon, TimesIcon, SharedModule, ButtonModule, ProgressBarModule, MessagesModule]\n    });\n  }\n  return FileUploadModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileUpload, FileUploadModule };\n//# sourceMappingURL=primeng-fileupload.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}