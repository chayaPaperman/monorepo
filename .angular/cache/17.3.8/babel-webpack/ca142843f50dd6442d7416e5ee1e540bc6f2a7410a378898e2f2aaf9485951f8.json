{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { USER_ENDPOINT } from '../api-urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./hash-password.service\";\nimport * as i3 from \"./role-service.service\";\nconst API_URL = 'http://localhost:8080/api/test/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, hashService, roleService) {\n      this.http = http;\n      this.hashService = hashService;\n      this.roleService = roleService;\n      this.apiUrl = USER_ENDPOINT;\n    }\n    register(username, passwordHash, email, role) {\n      debugger;\n      passwordHash = this.hashService.encryptPassword(passwordHash);\n      const newUser = {\n        \"userName\": username,\n        \"passwordHash\": passwordHash,\n        \"role\": role,\n        \"email\": email\n      };\n      return this.http.put(this.apiUrl + \"/create\", newUser, httpOptions);\n    }\n    getPublicContent() {\n      return this.http.get(API_URL + 'all', {\n        responseType: 'text'\n      });\n    }\n    getUserBoard() {\n      return this.http.get(API_URL + 'user', {\n        responseType: 'text'\n      });\n    }\n    getModeratorBoard() {\n      return this.http.get(API_URL + 'mod', {\n        responseType: 'text'\n      });\n    }\n    getAdminBoard() {\n      return this.http.get(API_URL + 'admin', {\n        responseType: 'text'\n      });\n    }\n    getAllUsers() {\n      return this.http.get(this.apiUrl + '/findAll');\n    }\n    changPassword(newPassword) {\n      const token = JSON.parse(sessionStorage.getItem('auth-user') + '')?.access_token;\n      const headers = {\n        'Authorization': `Bearer ${token}`\n      };\n      const body = {\n        newPassword: this.hashService.encryptPassword(newPassword)\n      };\n      return this.http.put(this.apiUrl + 'changePassword', body, {\n        headers\n      });\n    }\n    static #_ = this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HashPasswordService), i0.ɵɵinject(i3.RoleServiceService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}